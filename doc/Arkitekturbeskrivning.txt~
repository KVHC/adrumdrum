---------------Arkitekturbeskrivning adrumdrum----------------------------------

Projektet adrummdrum innehåller 6 stycken olika paket 


#----kvhc.adrumdrum----#
Paketet adrumdrum innehåller bara programmets main klass. 


	*----MainActivity----*
	Programmets startpunkt. Här görs allt som krävs för att appen ska starta




#----kvhc.gui.dialogs----#
I paketet dialogs ligger alla dialoger som används av programmet. 


	*----ChannelDialog----*
	En dialog över olika kanalinställningar


	*----StepDialog----*
	En dialog som ändrar värden på ett Step. Startas av en GUIStepButton




#----kvhc.gui----#
Här finns de klasser som används för att skapa ett GUI. Här finns det även 
klasser som används för att uppdatera och ändra i GUI:t


	
	*----GUIController----*
	Kontrollerar det mesta i programmet. Det är här allt som har med GUI:t att 
	göra instansieras. Det är den här klassen som reagerar på input från 
	användaren och ser till att rätt åtgärder utförs. Den här klassen skapar 
	också nya songs och laddar in dem i en player.


	*----ChannelButtonGUI----*
	Ett gui för att representera en knapp som man kan klicka på för att få upp
	kanalinställningar eller muta kanalen


	*----GUIStepButton----*
	En klass som beskriver hur ett step ska se ut. Sköter aktivering/avaktivering 
	av ett step när den blir klickad på. Vid ett "långt" klick visas en StepDialog 


	*----GUIUpdateObsever----*
	En Observer som updaterar GUI:t med information som skickas av player


	*----LongClickStepListener----*
	En step listener som utför det som ska göras vid ett "långt" klick 
	på en GUIStepButton




#----kvhc.player----#
Paketet player innehåller de klasser som styr spelaren och 

	*----Player----*
	Player spelar upp en angiven Song. Player sköter vad som ska spelas upp 
	och när det ska göras. En Player har en SoundManager som sköter 
	uppspelningen av ljud


	*----Song----*
	Song används för att modellera antalet kanaler och hur många steg varje 
	kanal har. 


	*----Channel----*
	En Channel innehåller ett visst antal Steps. I en Channel finns det även
	variabler och metoder för att ändra kanalvolym, uppspelningsljud och 
	panning


	*----Step----*
	Ett Step är en modell för en ruta som man kan markera som aktiv eller inte. 
	Step innehåller också ett värde för hur hög ljuduppspelningen ska vara.


	*----Sound----*
	Ett sound är en "Wrapper klass" för ett ljud


	*----SoundManager----*
	SoundManager sköter all uppspelning av ljud





#----kvhc.util----#


#----kvhc.util.db----#
















*----AndroidTimer----*
En timer som kör en Runnable varje gång som "tiden går ut". Används av player 
för att styra tiden mellan varje uppspelning av nästa steg.




ISongRenderer

PdRenderer

SoundPoolRenderer

SQLRenderer

DatabaseHandler

